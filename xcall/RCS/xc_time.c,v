head	1.74;
access;
symbols;
locks; strict;
comment	@ * @;


1.74
date	96.04.08.00.05.48;	author ldl;	state Exp;
branches;
next	1.73;

1.73
date	96.03.08.12.53.43;	author ldl;	state Exp;
branches;
next	;


desc
@@


1.74
log
@1996-Apr-07 Checkpoint
@
text
@/***
 * $Source: /home/ldl/dbl/cdbl/xcall/RCS/xc_time.c,v $
 * $Revision: 1.73 $ $Date: 1996/03/08 12:53:43 $
 */

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "../cdbl_rt.h"
#include "xc__ckarg.h"

static
XC_ADscr  adscr[] =
            { /* min  max  type     flags     ercode     */
	      {    0,   0, "D" , ARG_ISVAR  ,   NULL   }
	    };
static
int       nadscr = sizeof(adscr) / sizeof(adscr[0]);

void
XCALL_FUNC(TIME)(narg, arg)				/* Function	*/
  int       narg;
  DBLArg_t *arg;
{
  char     *rtn = "TIME";
  char      buf[10], *src, *dst;
  Llong     tod;
  time_t    t;

  xc__ckarg(rtn, narg, arg, nadscr, adscr);

  time(&t);				/*  012345678901234567890123	*/
  src = ctime(&t);			/* "Day Mon dd hh:mm:ss yyyy\n"	*/

  sprintf(buf, "%.2s%.2s%.2s", src + 11, src + 14, src + 17);
  for (src = buf;  *src;  ++src)
    *src = (*src == ' ') ? '0' : *src;

  tod = atol(buf);

  dbl_putn(arg, tod, 0);
} /* TIME XCALL */ 

/* End of $Source: /home/ldl/dbl/cdbl/xcall/RCS/xc_time.c,v $ */
@


1.73
log
@1996-Mar-08 Checkpoint
@
text
@d2 2
a3 2
 * $Source$
 * $Revision$ $Date$
d44 1
a44 1
/* End of $Source$ */
@
