head	1.74;
access;
symbols;
locks; strict;
comment	@ * @;


1.74
date	96.04.08.00.05.45;	author ldl;	state Exp;
branches;
next	1.73;

1.73
date	96.03.08.12.53.42;	author ldl;	state Exp;
branches;
next	;


desc
@@


1.74
log
@1996-Apr-07 Checkpoint
@
text
@/***
 * $Source: /home/ldl/dbl/cdbl/xcall/RCS/xc_instr.c,v $
 * $Revision: 1.73 $ $Date: 1996/03/08 12:53:42 $
 */

#include <stdio.h>
#include "../cdbl_rt.h"
#include "xc__ckarg.h"

static
XC_ADscr  adscr[] =
            { /* min  max  type     flags     ercode     */
	      {    0,   0, "D" , 0          ,   NULL   },
	      {    0,   0, "A" , 0          ,   NULL   },
	      {    0,   0, "A" , 0          ,   NULL   },
	      {    0,   0, "D" , ARG_ISVAR  ,   NULL   }
	    };
static
int       nadscr = sizeof(adscr) / sizeof(adscr[0]);

void
XCALL_FUNC(INSTR)(narg, arg)				/* Function	*/
  int       narg;
  DBLArg_t *arg;
{
  char     *rtn = "INSTR";
  Llong     lpos;
  char     *src, *pat;
  int       pos, len, ntry;

  xc__ckarg(rtn, narg, arg, nadscr, adscr);

  lpos = 0;				/* Unsuccessful search		*/

  pos = (int)dbl_num(&arg[0]);
  len = arg[2].size;
  if (pos - 1 + len <= arg[1].size)	/* Pattern may exist after pos	*/
    {
      src  = (char *)arg[1].addr + pos - 1;
      pat  = (char *)arg[2].addr;
      ntry = arg[1].size - pos;		/* Maximum # of possibles	*/
      for ( ;  ntry-- > 0;  ++pos, ++src)
        if (strncmp(src, pat, len) == 0)
	  {
	    lpos = pos;
	    break;
	  }
    }
  dbl_putn(&arg[3], lpos, 0);		/* Store result			*/
} /* INSTR XCALL */ 

/* End of $Source: /home/ldl/dbl/cdbl/xcall/RCS/xc_instr.c,v $ */
@


1.73
log
@1996-Mar-08 Checkpoint
@
text
@d2 2
a3 2
 * $Source$
 * $Revision$ $Date$
d52 1
a52 1
/* End of $Source$ */
@
