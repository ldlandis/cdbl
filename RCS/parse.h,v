head	1.74;
access;
symbols;
locks; strict;
comment	@ * @;


1.74
date	96.04.08.00.06.03;	author ldl;	state Exp;
branches;
next	1.73;

1.73
date	96.03.08.12.54.02;	author ldl;	state Exp;
branches;
next	1.72;

1.72
date	96.01.31.12.06.09;	author ldl;	state Exp;
branches;
next	1.71;

1.71
date	96.01.17.09.44.29;	author ldl;	state Exp;
branches;
next	1.70;

1.70
date	95.11.20.18.53.07;	author ldl;	state Exp;
branches;
next	1.69;

1.69
date	95.11.11.11.15.16;	author ldl;	state Exp;
branches;
next	1.68;

1.68
date	95.11.03.09.20.16;	author ldl;	state Exp;
branches;
next	1.67;

1.67
date	95.10.24.08.27.43;	author ldl;	state Exp;
branches;
next	1.66;

1.66
date	95.10.23.09.19.41;	author ldl;	state Exp;
branches;
next	1.65;

1.65
date	95.10.19.02.07.32;	author ldl;	state Exp;
branches;
next	1.64;

1.64
date	95.09.28.09.40.13;	author ldl;	state Exp;
branches;
next	1.63;

1.63
date	95.09.19.10.41.35;	author ldl;	state Exp;
branches;
next	1.62;

1.62
date	95.09.11.10.27.17;	author ldl;	state Exp;
branches;
next	1.61;

1.61
date	95.09.08.10.47.04;	author ldl;	state Exp;
branches;
next	1.60;

1.60
date	95.09.06.10.46.02;	author ldl;	state Exp;
branches;
next	1.59;

1.59
date	95.09.05.11.44.04;	author ldl;	state Exp;
branches;
next	1.58;

1.58
date	95.09.04.12.12.47;	author ldl;	state Exp;
branches;
next	1.57;

1.57
date	95.08.02.12.39.02;	author ldl;	state Exp;
branches;
next	1.56;

1.56
date	95.08.01.11.52.09;	author ldl;	state Exp;
branches;
next	1.55;

1.55
date	95.07.21.12.24.52;	author ldl;	state Exp;
branches;
next	1.54;

1.54
date	95.07.18.12.39.33;	author ldl;	state Exp;
branches;
next	1.53;

1.53
date	95.07.17.12.40.53;	author ldl;	state Exp;
branches;
next	1.52;

1.52
date	95.07.12.14.07.21;	author ldl;	state Exp;
branches;
next	1.51;

1.51
date	95.07.05.12.50.50;	author ldl;	state Exp;
branches;
next	1.50;

1.50
date	95.07.03.12.17.43;	author ldl;	state Exp;
branches;
next	1.49;

1.49
date	95.06.30.11.14.48;	author ldl;	state Exp;
branches;
next	1.48;

1.48
date	95.06.29.09.14.24;	author ldl;	state Exp;
branches;
next	1.47;

1.47
date	95.06.28.09.53.06;	author ldl;	state Exp;
branches;
next	1.46;

1.46
date	95.06.23.11.19.28;	author ldl;	state Exp;
branches;
next	1.45;

1.45
date	95.06.21.12.41.01;	author ldl;	state Exp;
branches;
next	1.44;

1.44
date	95.06.20.12.17.35;	author ldl;	state Exp;
branches;
next	1.43;

1.43
date	95.06.15.09.12.48;	author ldl;	state Exp;
branches;
next	1.42;

1.42
date	95.06.14.08.57.38;	author ldl;	state Exp;
branches;
next	1.41;

1.41
date	95.06.12.11.37.05;	author ldl;	state Exp;
branches;
next	1.40;

1.40
date	95.06.12.09.15.34;	author ldl;	state Exp;
branches;
next	1.39;

1.39
date	95.06.09.11.19.46;	author ldl;	state Exp;
branches;
next	1.38;

1.38
date	95.06.06.11.47.23;	author ldl;	state Exp;
branches;
next	1.37;

1.37
date	95.05.15.10.22.15;	author ldl;	state Exp;
branches;
next	1.36;

1.36
date	95.05.02.10.43.22;	author ldl;	state Exp;
branches;
next	1.35;

1.35
date	95.04.25.11.48.30;	author ldl;	state Exp;
branches;
next	1.34;

1.34
date	95.04.24.12.23.17;	author ldl;	state Exp;
branches;
next	1.33;

1.33
date	95.04.23.12.55.16;	author ldl;	state Exp;
branches;
next	1.32;

1.32
date	95.04.22.12.42.54;	author ldl;	state Exp;
branches;
next	1.31;

1.31
date	95.04.19.11.29.11;	author ldl;	state Exp;
branches;
next	1.30;

1.30
date	95.04.18.12.00.42;	author ldl;	state Exp;
branches;
next	1.29;

1.29
date	95.04.13.10.23.58;	author ldl;	state Exp;
branches;
next	1.28;

1.28
date	95.04.03.11.47.13;	author ldl;	state Exp;
branches;
next	1.27;

1.27
date	95.03.27.03.06.29;	author ldl;	state Exp;
branches;
next	1.26;

1.26
date	95.03.26.19.58.15;	author ldl;	state Exp;
branches;
next	1.25;

1.25
date	95.03.23.13.31.35;	author ldl;	state Exp;
branches;
next	1.24;

1.24
date	95.03.19.23.29.20;	author ldl;	state Exp;
branches;
next	1.23;

1.23
date	95.03.08.13.33.30;	author ldl;	state Exp;
branches;
next	1.22;

1.22
date	95.03.06.12.00.18;	author ldl;	state Exp;
branches;
next	1.21;

1.21
date	95.03.06.10.32.00;	author ldl;	state Exp;
branches;
next	1.20;

1.20
date	95.03.05.03.24.38;	author ldl;	state Exp;
branches;
next	1.19;

1.19
date	95.03.03.12.36.20;	author ldl;	state Exp;
branches;
next	1.18;

1.18
date	95.02.27.12.55.29;	author ldl;	state Exp;
branches;
next	1.17;

1.17
date	95.02.26.10.54.29;	author ldl;	state Exp;
branches;
next	1.16;

1.16
date	95.01.07.15.34.54;	author ldl;	state Exp;
branches;
next	1.15;

1.15
date	95.01.07.11.22.37;	author ldl;	state Exp;
branches;
next	1.14;

1.14
date	94.12.31.02.31.32;	author ldl;	state Exp;
branches;
next	1.13;

1.13
date	94.12.30.21.01.52;	author ldl;	state Exp;
branches;
next	1.12;

1.12
date	94.12.27.04.07.26;	author ldl;	state Exp;
branches;
next	1.11;

1.11
date	94.12.26.23.53.01;	author ldl;	state Exp;
branches;
next	1.10;

1.10
date	94.12.16.07.22.20;	author ldl;	state Exp;
branches;
next	1.9;

1.9
date	94.12.15.23.42.30;	author ldl;	state Exp;
branches;
next	1.8;

1.8
date	94.12.04.07.22.26;	author ldl;	state Exp;
branches;
next	1.7;

1.7
date	94.12.02.07.12.51;	author ldl;	state Exp;
branches;
next	1.6;

1.6
date	94.12.01.07.06.01;	author ldl;	state Exp;
branches;
next	1.5;

1.5
date	94.11.28.05.26.51;	author ldl;	state Exp;
branches;
next	1.4;

1.4
date	94.11.26.08.23.57;	author ldl;	state Exp;
branches;
next	1.3;

1.3
date	94.11.22.14.26.57;	author ldl;	state Exp;
branches;
next	;


desc
@@


1.74
log
@1996-Apr-07 Checkpoint
@
text
@/***
 * $Source: /home/ldl/dbl/cdbl/RCS/parse.h,v $
 * $Revision: 1.73 $ $Date: 1996/03/08 12:54:02 $
 */

#ifndef	_PARSE_H_
#define _PARSE_H_

#include "node.h"
#include "util.h"
#include "expr.h"

/***
 *	Parser controls structure and routines.
 *
 * Synopsis:
 *
 *	  Node     *n;			// Node to set type/value into
 *
 * Notes:
 */

/**
 *	The IntrinsicFunc structure is used for both "well-known" XCALL
 *	and "built-in" functions.  The 'if_type' field is meaningless for
 *	XCALL definitions.  The table terminates with an 'if_name' entry
 *	of NULL.  The table need not be in sorted order.
 */
typedef
struct					/* XCALL/Built-in Descriptor	*/
  {					/* ----------------------------	*/
    char     *if_name;			/* Name of built-in		*/
    char      if_type;			/* Return type of builtin	*/
    int       if_bindtime;		/* When to execute the builtin	*/
#define IF_BINDLATER	0		/*  Execute at runtime		*/
#define IF_BINDNOW	1		/*  Execute during compile time	*/
    char     *if_narg;			/* Argument control descriptor	*/
    char     *if_arg;			/* Argument descriptor		*/
  }         IntrinsicFunc;		/* ----------------------------	*/

SC
IntrinsicFunc *builtins IS(= (IntrinsicFunc *)NULL),
              *xcalls   IS(= (IntrinsicFunc *)NULL);


/**
 *	Shared compiler directive definitions.
 */
#define	MX_INCLUDE_NESTING	30
					/* For .IFF/.IFT/.IFTF		*/
#define IFTF_NONE	-1		/*   not active			*/
#define IFTF_FALSE	 0		/*   only if cond FALSE		*/
#define IFTF_TRUE	 1		/*   only if cond TRUE		*/
#define IFTF_ALWAYS	 2		/*   regardless of cond		*/

struct					/* Parser control structure	*/
  {					/* ----------------------------	*/
    int       div;			/* Have entered Division ...	*/
#define DIV_NONE	 0		/*   Not in any division yet	*/
#define DIV_SUB		 1		/*   Have been in subroutine	*/
#define DIV_DAT		 2		/*   Have been in data		*/
#define DIV_PRC		 3		/*   Have been in procedure	*/
#define DIV_EOF		 4		/*   Have seen the End-Of-File	*/
    Node_id   div_base;			/* Holder for symbol tables	*/
    Node_id   tree;			/* Parse tree start node	*/
    int       indent;			/* Indentation level		*/
    int       argc;			/* main argc value		*/
    char    **argv;			/* main argv value		*/
    char    **arge;			/* main arge value		*/
    int       debug_setting;		/* Debug setting from .DEBUG	*/
    int       yydebug;			/* Debugging level		*/
    int       flags;			/* Flags (set by run_and_show)	*/
    char     *out;			/* Output file name (or NULL)	*/
    char     *hdr;			/* Output header name (or NULL)	*/
    char     *file;			/* Current file name		*/
    int       line;			/* Current line of file		*/
    int       cd_line;			/* Compiler .LINE directive line*/
    int       newline;			/* New line state (0=no, 1=yes)	*/
    int       errors;			/* Errors found			*/
    int       warnings;			/* Warnings found		*/
    int       syntax_only;		/* Do not run resolve/generate	*/
  }					/*				*/
#define _PARSE\
  {					/* ----------------------------	*/\
     DIV_NONE,				/* No divisions seen		*/\
     NIL,				/* No div_base set		*/\
     0,					/* No parse tree		*/\
     1,					/* Indent each level increment	*/\
     0,					/* argc				*/\
     NULL,				/* argv				*/\
     NULL,				/* arge				*/\
     0,					/* No .DEBUG setting		*/\
     0,					/* No debugging			*/\
     0,					/* <flags> set by run_and_show	*/\
     NULL,				/* No output file, use name.c	*/\
     NULL,				/* No output header, use name.h	*/\
     "<stdin>",				/* No file name			*/\
     1,					/* Current lineq		*/\
     -1,				/* No .LINE directive active	*/\
     1,					/* Is a new line		*/\
     0,					/* No errors			*/\
     0,					/* No warnings			*/\
     0,					/* Run the whole thing		*/\
  }
          _parse IS(= _PARSE);		/* Initial values		*/
#undef _PARSE

void
  c_dump_nodes	PROTOARGS((Node_id));
void
  c_error	PROTOARGS((/* char *, ... */));
void
  c_trace_nodes	PROTOARGS((int));
void
  c_warning	PROTOARGS((/* char *, ... */));
int
  generate	PROTOARGS((void));
void
  genref	PROTOARGS((Node_id));
void
  init_divisions PROTOARGS((void));
int
  resolve	PROTOARGS((void));
void
  s_do_include	PROTOARGS((void));
char *
  s_filter	PROTOARGS((char *));
void
  s_cd_else	PROTOARGS((int)),
  s_cd_endc	PROTOARGS((int)),
  s_cd_if	PROTOARGS((Token, long)),
  s_cd_ifdef	PROTOARGS((Token, Token)),
  s_cd_iftf	PROTOARGS((int));
int
  s_kw_lookup	PROTOARGS((char *, char *[]));
void
  s_next_include PROTOARGS((Token));
void
  s_skip_to_eol	PROTOARGS((Token));
void
  s_tolower	PROTOARGS((char *));
void
  s_toupper	PROTOARGS((char *));
void
  pop_gram_state PROTOARGS((char *));
void
  yyerror	PROTOARGS((char *));
int
  yyparse	PROTOARGS((void));

#endif/*_PARSE_H_*/


/* End of $Source: /home/ldl/dbl/cdbl/RCS/parse.h,v $ */
@


1.73
log
@1996-Mar-08 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.72 $ $Date: 1996/01/31 12:06:09 $
d24 23
d140 4
@


1.72
log
@1996-Jan-31 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.71 $ $Date: 1996/01/17 09:44:29 $
@


1.71
log
@1996-Jan-17 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.70 $ $Date: 1995/11/20 18:53:07 $
@


1.70
log
@1995-Nov-20 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.69 $ $Date: 1995/11/11 11:15:16 $
@


1.69
log
@1995-Nov-11 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.68 $ $Date: 1995/11/03 09:20:16 $
@


1.68
log
@1995-Nov-03 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.67 $ $Date: 1995/10/24 08:27:43 $
@


1.67
log
@1995-Oct-24 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.66 $ $Date: 1995/10/23 09:19:41 $
@


1.66
log
@1995-Oct-23 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.65 $ $Date: 1995/10/19 02:07:32 $
@


1.65
log
@1995-Oct-18 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.64 $ $Date: 1995/09/28 09:40:13 $
@


1.64
log
@1995-Sep-28 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.63 $ $Date: 1995/09/19 10:41:35 $
@


1.63
log
@1995-Sep-19 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.62 $ $Date: 1995/09/11 10:27:17 $
@


1.62
log
@1995-Sep-11 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.61 $ $Date: 1995/09/08 10:47:04 $
@


1.61
log
@1995-Sep-08 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.60 $ $Date: 1995/09/06 10:46:02 $
@


1.60
log
@1995-Sep-06 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.59 $ $Date: 1995/09/05 11:44:04 $
@


1.59
log
@1995-Sep-05 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.58 $ $Date: 1995/09/04 12:12:47 $
@


1.58
log
@1995-Sep-04 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.57 $ $Date: 1995/08/02 12:39:02 $
a84 1

d88 1
a88 1
  c_error	PROTOARGS((...));
d92 1
a92 1
  c_warning	PROTOARGS((...));
@


1.57
log
@1995-Aug-02 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.56 $ $Date: 1995/08/01 11:52:09 $
d54 1
d76 1
@


1.56
log
@1995-Aug-01 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.55 $ $Date: 1995/07/21 12:24:52 $
@


1.55
log
@1995-Jul-21 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.54 $ $Date: 1995/07/18 12:39:33 $
d23 3
d27 5
d47 1
d68 1
d104 6
d116 2
@


1.54
log
@1995-Jul-18 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.53 $ $Date: 1995/07/17 12:40:53 $
d86 2
@


1.53
log
@1995-Jul-17 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.52 $ $Date: 1995/07/12 14:07:21 $
@


1.52
log
@1995-Jul-12 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.51 $ $Date: 1995/07/05 12:50:50 $
@


1.51
log
@1995-Jul-05 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.50 $ $Date: 1995/07/03 12:17:43 $
@


1.50
log
@1995-Jul-03 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.49 $ $Date: 1995/06/30 11:14:48 $
@


1.49
log
@1995-Jun-30 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.48 $ $Date: 1995/06/29 09:14:24 $
@


1.48
log
@1995-Jun-29 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.47 $ $Date: 1995/06/28 09:53:06 $
@


1.47
log
@1995-Jun-28 Checkpoint. Happy 17th birthday, Kara\!
@
text
@d3 1
a3 1
 * $Revision: 1.46 $ $Date: 1995/06/23 11:19:28 $
@


1.46
log
@1995-Jun-23 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.45 $ $Date: 1995/06/21 12:41:01 $
d84 2
@


1.45
log
@1995-Jun-21 Checkpoint. hello.dbl runs\!
@
text
@d3 1
a3 1
 * $Revision: 1.44 $ $Date: 1995/06/20 12:17:35 $
@


1.44
log
@1995-Jun-20 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.43 $ $Date: 1995/06/15 09:12:48 $
@


1.43
log
@1995-Jun-15 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.42 $ $Date: 1995/06/14 08:57:38 $
@


1.42
log
@1995-Jun-14 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.41 $ $Date: 1995/06/12 11:37:05 $
d78 2
@


1.41
log
@1995-Jun-12 Checkpoint 2
@
text
@d3 1
a3 1
 * $Revision: 1.40 $ $Date: 1995/06/12 09:15:34 $
@


1.40
log
@1995-Jun-12 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.39 $ $Date: 1995/06/09 11:19:46 $
@


1.39
log
@1995-Jun-09 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.38 $ $Date: 1995/06/06 11:47:23 $
@


1.38
log
@1995-Jun-06 Checkpoint
@
text
@d3 1
a3 1
 * $Revision: 1.37 $ $Date: 1995/05/15 10:22:15 $
@


1.37
log
@1995-May-15 Checkpoint
@
text
@d2 2
a3 2
 * $Locker: ldl $ $Source: /home/ldl/dbl/cdbl/RCS/parse.h,v $
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.36 1995/05/02 10:43:22 ldl Exp ldl $
@


1.36
log
@1995-May-02 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.35 1995/04/25 11:48:30 ldl Exp ldl $
@


1.35
log
@1995-Apr-25 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.34 1995/04/24 12:23:17 ldl Exp ldl $
@


1.34
log
@1995-Apr-24 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.33 1995/04/23 12:55:16 ldl Exp ldl $
@


1.33
log
@1995-Apr-23 Checkpoint (a.m.)
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.32 1995/04/22 12:42:54 ldl Exp ldl $
@


1.32
log
@1995-Apr-22 Checkpoint (a.m.)
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.31 1995/04/19 11:29:11 ldl Exp ldl $
@


1.31
log
@1995-Apr-19 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.30 1995/04/18 12:00:42 ldl Exp ldl $
@


1.30
log
@1995-Apr-18 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.29 1995/04/13 10:23:58 ldl Exp ldl $
@


1.29
log
@1995-Apr-13 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.28 1995/04/03 11:47:13 ldl Exp ldl $
d42 1
d62 1
@


1.28
log
@1995-Apr-03 Checkpoint.
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.27 1995/03/27 03:06:29 ldl Exp ldl $
@


1.27
log
@26-Mar-1995 Checkpoint 2
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.26 1995/03/26 19:58:15 ldl Exp ldl $
@


1.26
log
@26-Mar-1995 Checkpoint 1
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.25 1995/03/23 13:31:35 ldl Exp ldl $
d11 1
@


1.25
log
@23-Mar-1995 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.24 1995/03/19 23:29:20 ldl Exp ldl $
@


1.24
log
@19-Mar-1995 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.23 1995/03/08 13:33:30 ldl Exp ldl $
@


1.23
log
@08-Mar-1995 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.22 1995/03/06 12:00:18 ldl Exp ldl $
d85 2
@


1.22
log
@06-Mar-1995 Checkpoint 2
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.21 1995/03/06 10:32:00 ldl Exp ldl $
d61 1
a61 1
     0,					/* No current line		*/\
d72 1
a72 1
  c_dump_nodes	PROTOARGS((int));
@


1.21
log
@06-Mar-1995 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.20 1995/03/05 03:24:38 ldl Exp ldl $
@


1.20
log
@04-Mar-1995 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.19 1995/03/03 12:36:20 ldl Exp ldl $
@


1.19
log
@03-Mar-1995 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.18 1995/02/27 12:55:29 ldl Exp ldl $
@


1.18
log
@27-Feb-1995 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.17 1995/02/26 10:54:29 ldl Exp ldl $
@


1.17
log
@26-Feb-1995 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.16 1995/01/07 15:34:54 ldl Exp ldl $
d10 1
d32 1
d35 3
d39 1
d51 1
d54 3
d58 1
d69 1
@


1.16
log
@07-Jan-1995 Checkpoint 2
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.15 1995/01/07 11:22:37 ldl Exp ldl $
d30 1
d34 1
d48 1
d62 2
a64 2
void
  c_error	PROTOARGS((...));
@


1.15
log
@07-Jan-1995 Checkpoint 1
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.14 1994/12/31 02:31:32 ldl Exp ldl $
@


1.14
log
@30-Dec-1994 Checkpoint 2
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.13 1994/12/30 21:01:52 ldl Exp ldl $
d38 1
d50 2
a51 1
     0					/* No warnings			*/\
d68 2
@


1.13
log
@30-Dec-1994 Checkpoint 1
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.12 1994/12/27 04:07:26 ldl Exp ldl $
@


1.12
log
@26-Dec-1994 Checkpoint 2
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.11 1994/12/26 23:53:01 ldl Exp ldl $
d21 2
d32 1
d44 1
d55 11
a65 1
c_dump_nodes		PROTOARGS((int));
d67 1
a67 1
c_warning		PROTOARGS((...));
d69 1
a69 1
c_error			PROTOARGS((...));
d71 3
a73 1
yyerror			PROTOARGS((char *));
@


1.11
log
@26-Dec-1994 Checkpoint 1
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.10 1994/12/16 07:22:20 ldl Exp ldl $
@


1.10
log
@15-Dec-1994 late
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.9 1994/12/15 23:42:30 ldl Exp ldl $
@


1.9
log
@15-Dec-1994 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/cdbl/RCS/parse.h,v 1.8 1994/12/04 07:22:26 ldl Exp ldl $
@


1.8
log
@03-Dec-94 Checkpoint
@
text
@d2 2
a3 2
 * $Locker: ldl $ $Source: /home/ldl/dbl/RCS/parse.h,v $
 * $Header: /home/ldl/dbl/RCS/parse.h,v 1.7 1994/12/02 07:12:51 ldl Exp ldl $
d29 1
d40 1
d51 1
a51 1
c_dump_nodes		PROTOARGS((void));
d62 1
a62 1
/* End of $Source: /home/ldl/dbl/RCS/parse.h,v $ */
@


1.7
log
@01-Dec-94 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/RCS/parse.h,v 1.6 1994/12/01 07:06:01 ldl Exp ldl $
a22 1
    int       datatype;			/* Parsing a data type?		*/
d28 3
d32 2
a33 1
    Node_id   tree;			/* Parse tree start node	*/
d35 12
a46 7
          _parse =			/* Initial values		*/
  {					/* ----------------------------	*/
     0,					/* Not parsing data type	*/
     DIV_NONE,				/* No divisions seen		*/
     1,					/* Is a new line		*/
     0					/* No parse tree		*/
  };
d48 8
@


1.6
log
@30-Nov-94 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/RCS/parse.h,v 1.5 1994/11/28 05:26:51 ldl Exp ldl $
d30 1
a30 1
    Node     *tree;			/* Parse tree			*/
d37 1
a37 1
     (Node *)NULL			/* No parse tree		*/
d39 1
@


1.5
log
@27-Nov-94 Checkpoint
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/RCS/parse.h,v 1.4 1994/11/26 08:23:57 ldl Exp ldl $
@


1.4
log
@25-Nov-94 Checkpoint (Early A.M. on the 26th)
@
text
@d3 1
a3 1
 * $Header: /home/ldl/dbl/RCS/parse.h,v 1.3 1994/11/22 14:26:57 ldl Exp ldl $
@


1.3
log
@22-Nov-94 Checkpoint
@
text
@d2 2
a3 2
 * $Locker$ $Source$
 * $Header$
d43 1
a43 1
/* End of $Source$ */
@
