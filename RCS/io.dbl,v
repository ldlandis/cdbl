head	1.74;
access;
symbols;
locks; strict;
comment	@# @;


1.74
date	96.04.08.00.05.58;	author ldl;	state Exp;
branches;
next	1.73;

1.73
date	96.03.08.12.53.56;	author ldl;	state Exp;
branches;
next	1.72;

1.72
date	96.01.31.12.05.59;	author ldl;	state Exp;
branches;
next	1.71;

1.71
date	96.01.17.09.44.26;	author ldl;	state Exp;
branches;
next	1.70;

1.70
date	95.11.20.18.53.03;	author ldl;	state Exp;
branches;
next	1.69;

1.69
date	95.11.11.11.15.13;	author ldl;	state Exp;
branches;
next	1.68;

1.68
date	95.11.03.09.20.13;	author ldl;	state Exp;
branches;
next	1.67;

1.67
date	95.10.24.08.27.38;	author ldl;	state Exp;
branches;
next	1.66;

1.66
date	95.10.23.09.19.36;	author ldl;	state Exp;
branches;
next	1.65;

1.65
date	95.10.19.02.07.28;	author ldl;	state Exp;
branches;
next	;


desc
@@


1.74
log
@1996-Apr-07 Checkpoint
@
text
@RECORD BIN
        DATA_A9, A9

RECORD
	DATA, A8
	REC,  D1

RECORD RPTLINE
	,A5, 'LINE '
	LINE, D2
	,A2, '  '
	VALUE,A10

PROC
	OPEN( 6, O:P, 'io.lst')
	OPEN(10, U  , 'io.ddf')

	WRITES(10, 'Record 1')	; Write out some sample data
	WRITES(10, 'Record 2')	; Note: this is not binary output (add '\n')

	WRITE(10, 'Record 3', 3)

	REC = 1
	CLEAR DATA		; Demonstrate we really read what we wrote
	READ(10, DATA, REC)
	DISPLAY(1, "Record 1 = ", DATA, 10)
	CALL WRITE_IT

	CLEAR DATA
	READ(10, DATA, 2)
	REC = 2
	DISPLAY(1, "Record 2 = ", DATA, 10)
	CALL WRITE_IT

	CLEAR DATA
	READ(10, DATA, 3)
	REC = 3
	DISPLAY(1, "Record 3 = ", DATA, 10)
	CALL WRITE_IT

	CLEAR DATA
	READS(10, DATA, READS_REVERSE_ERR, REVERSE)
	REC = REC - 1
	GOTO READS_REVERSE_AFTER
READS_REVERSE_ERR,
	DISPLAY(1, "Took error route", 10)
	REC = 0
READS_REVERSE_AFTER,
	DISPLAY(1, "Reverse  = ", DATA, 10)
	CALL WRITE_IT

	CLEAR DATA
	READS(10, DATA)
	REC = REC + 1
	DISPLAY(1, "Forward  = ", DATA, 10)
	CALL WRITE_IT

	READS(10, DATA, READS_ERR, DIRECTION:-1)
	REC = REC - 1
	GOTO READS_AFTER
READS_ERR,
	DISPLAY(1, "Took error route", 10)
	REC = 0
READS_AFTER,
	DISPLAY(1, "Backward = ", DATA, 10)
	CALL WRITE_IT

	CLOSE 10		; Close to lose recsize association
	OPEN(10, U, 'io.ddf')

	REC = 1
	CLEAR BIN
	GET(10, BIN, REC)	; Note: this *is* binary input
	DISPLAY(1, "Record 1 = ", BIN)	; Note the '\n' is part of the data
					; That is why when we write this
					; record, we get the new line.

	REC = 2
	CLEAR BIN
	GET(10, BIN, REC)
	DISPLAY(1, "Record 2 = ", BIN)

	CLOSE 10
	CLOSE 6
	STOP

WRITE_IT,
	LINE  = REC
	VALUE = DATA
	WRITES(6, RPTLINE)
	RETURN
	END
@


1.73
log
@1996-Mar-08 Checkpoint
@
text
@@


1.72
log
@1996-Jan-31 Checkpoint
@
text
@@


1.71
log
@1996-Jan-17 Checkpoint
@
text
@@


1.70
log
@1995-Nov-20 Checkpoint
@
text
@@


1.69
log
@1995-Nov-11 Checkpoint
@
text
@d21 2
d33 6
@


1.68
log
@1995-Nov-03 Checkpoint
@
text
@@


1.67
log
@1995-Oct-24 Checkpoint
@
text
@d33 27
@


1.66
log
@1995-Oct-23 Checkpoint
@
text
@d17 4
a20 2
	WRITES(10, 'Record 1')
	WRITES(10, 'Record 2')
d22 1
d27 1
d37 2
a38 1
	GET(10, BIN, REC)
d44 1
@


1.65
log
@1995-Oct-18 Checkpoint
@
text
@d1 3
d6 1
a6 1
	REC, D1
d28 13
@
